/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   anypoint-checkbox.js
 *   anypoint-checkbox.js
 */

declare namespace AnypointComponents {

  /**
   * `anypoint-checkbox`
   * Anypoint styled checkbox
   *
   * `<anypoint-checkbox>` is a button that can be either checked or unchecked.
   * User can tap the checkbox to check or uncheck it.  Usually you use checkboxes
   * to allow user to select multiple options from a set.
   * Avoid using a single checkbox as an option selector and use toggle button intead.
   *
   * ### Example
   *
   * ```html
   * <anypoint-checkbox>label</anypoint-checkbox>
   * <anypoint-checkbox checked>label</anypoint-checkbox>
   * ```
   *
   * ### Using with forms
   *
   * ```
   * npm i --save @polymer/iron-form
   * ```
   *
   * ```html
   * <script type="module">
   * import 'node_modules/@polymer/iron-form';
   * </script>
   * <iron-form>
   *  <form>
   *    <anypoint-checkbox name="subscribe" value="newsletetr">Subsceribe to our newsletter</anypoint-checkbox>
   *    <anypoint-checkbox name="tems" value="accepted" checked>Agree to terms and conditions</anypoint-checkbox>
   *    <anypoint-checkbox name="disabled" value="noop" disabled>This is never included</anypoint-checkbox>
   *  </form>
   * </iron-form>
   * <script>
   * const values = document.querySelector('iron-form').serializeForm();
   * console.log(values);
   * </script>
   * ```
   *
   * ### Styling
   *
   * `<anypoint-checkbox>` provides the following custom properties and mixins for styling:
   *
   * Custom property | Description | Default
   * ----------------|-------------|----------
   * `--anypoint-checkbox` | Mixin applied to the element | `{}`
   * `--anypoint-checkbox-input-border-bolor` | Border color of the checkbox input square | `--anypoint-color-aluminum4`
   * `--anypoint-checkbox-label-color` | A color of the label. | ` --anypoint-color-steel1`
   * `--anypoint-checkbox-label` | Mixin applied to the label | ``
   * `--anypoint-checkbox-label-checked-color` | Color of checked label | `--anypoint-checkbox-label-color` or `--anypoint-color-steel1`
   * `--anypoint-checkbox-label-checked` | Mixin applie dto checked label | ``
   * `--anypoint-checkbox-unchecked-color` | Color of a label of unchecked checkbox | `--anypoint-checkbox-label-color` or `--anypoint-color-steel1`
   * `--anypoint-checkbox-error-color` | Color of error state | `--anypoint-color-danger`
   * `--anypoint-checkbox-label-spacing` | Spacing between the label and the checkbox | `0`
   */
  class AnypointCheckbox extends Polymer.Element {
    ariaActiveAttribute: string|null|undefined;
    connectedCallback(): void;
    _computeCheckboxClass(checked: any, invalid: any): any;
    _computeCheckmarkClass(checked: any): any;

    /**
     * Synchronizes the element's `active` and `checked` state.
     */
    _buttonStateChanged(): void;
  }

  /**
   * `anypoint-checkbox`
   * Anypoint styled checkbox
   *
   * `<anypoint-checkbox>` is a button that can be either checked or unchecked.
   * User can tap the checkbox to check or uncheck it.  Usually you use checkboxes
   * to allow user to select multiple options from a set.
   * Avoid using a single checkbox as an option selector and use toggle button intead.
   *
   * ### Example
   *
   * ```html
   * <anypoint-checkbox>label</anypoint-checkbox>
   * <anypoint-checkbox checked>label</anypoint-checkbox>
   * ```
   *
   * ### Using with forms
   *
   * ```
   * npm i --save @polymer/iron-form
   * ```
   *
   * ```html
   * <script type="module">
   * import 'node_modules/@polymer/iron-form';
   * </script>
   * <iron-form>
   *  <form>
   *    <anypoint-checkbox name="subscribe" value="newsletetr">Subsceribe to our newsletter</anypoint-checkbox>
   *    <anypoint-checkbox name="tems" value="accepted" checked>Agree to terms and conditions</anypoint-checkbox>
   *    <anypoint-checkbox name="disabled" value="noop" disabled>This is never included</anypoint-checkbox>
   *  </form>
   * </iron-form>
   * <script>
   * const values = document.querySelector('iron-form').serializeForm();
   * console.log(values);
   * </script>
   * ```
   *
   * ### Styling
   *
   * `<anypoint-checkbox>` provides the following custom properties and mixins for styling:
   *
   * Custom property | Description | Default
   * ----------------|-------------|----------
   * `--anypoint-checkbox` | Mixin applied to the element | `{}`
   * `--anypoint-checkbox-input-border-bolor` | Border color of the checkbox input square | `--anypoint-color-aluminum4`
   * `--anypoint-checkbox-label-color` | A color of the label. | ` --anypoint-color-steel1`
   * `--anypoint-checkbox-label` | Mixin applied to the label | ``
   * `--anypoint-checkbox-label-checked-color` | Color of checked label | `--anypoint-checkbox-label-color` or `--anypoint-color-steel1`
   * `--anypoint-checkbox-label-checked` | Mixin applie dto checked label | ``
   * `--anypoint-checkbox-unchecked-color` | Color of a label of unchecked checkbox | `--anypoint-checkbox-label-color` or `--anypoint-color-steel1`
   * `--anypoint-checkbox-error-color` | Color of error state | `--anypoint-color-danger`
   * `--anypoint-checkbox-label-spacing` | Spacing between the label and the checkbox | `0`
   */
  class AnypointCheckbox extends Polymer.Element {
    ariaActiveAttribute: string|null|undefined;
    connectedCallback(): void;
    _computeCheckboxClass(checked: any, invalid: any): any;
    _computeCheckmarkClass(checked: any): any;

    /**
     * Synchronizes the element's `active` and `checked` state.
     */
    _buttonStateChanged(): void;
  }
}

interface HTMLElementTagNameMap {
  "anypoint-checkbox": AnypointComponents.AnypointCheckbox;
  "anypoint-checkbox": AnypointComponents.AnypointCheckbox;
}
